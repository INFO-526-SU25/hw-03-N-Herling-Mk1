# - group the data - by explanatory, explanatory_value, and response calc.
# - the following stats:
# - mean of the response_value
# - low 10th percentile of the response_value
# - high 90th percentile of the response_value
# - rename the df coivd_survey_summart_stats_by_group
get_covid_survey_summary_stats_by_group <- function(data, group_vars, prob_low = 0.10, prob_high = 0.90) {
  data |>
    dplyr::group_by(dplyr::across(dplyr::all_of(group_vars))) |>
    dplyr::summarise(
      mean = mean(response_value, na.rm = TRUE),
      low = quantile(response_value, probs = prob_low, na.rm = TRUE),
      high = quantile(response_value, probs = prob_high, na.rm = TRUE),
      .groups = "drop"
    )
}

# - 3rd data wrangle step.
get_covid_survey_summary_stats_all <- function(data, prob_low = 0.10, prob_high = 0.90) {
  message("... in 'all creator'...")

  data |>
    dplyr::group_by(response) |>
    dplyr::summarise(
      mean = mean(response_value, na.rm = TRUE),
      low = quantile(response_value, probs = prob_low, na.rm = TRUE),
      high = quantile(response_value, probs = prob_high, na.rm = TRUE),
      .groups = "drop"
    )
}

# ----- graphing functions -----------
# ............ A function block, to handle Q3,Q4 with minimal code duplication

# - stylize the graphs.
set_dot_size <- 1



# Function for the "All" group plot (g0)
plot_all <- function(data) {
  ggplot(data, aes(x = explanatory_value, y = mean)) +
    geom_errorbar(aes(ymin = low, ymax = high), width = 0.2) +
    geom_point(size = set_dot_size, color = "black") +
    coord_flip() +
    #scale_x_continuous(limits = c(1, 5), breaks = 1:5) +
    facet_grid(
      rows = vars(explanatory),
      cols = vars(response),
      labeller = labeller(
        response = as_labeller(response_labels),
        explanatory = as_labeller(explanatory_labels)
      )
    ) +
    theme_minimal(base_size = 14) +
    labs(
      title = "COVID-19 Vaccine Attitudes by Demographic Group\n",
      x = NULL,
      y = NULL
    ) +
    theme(
      plot.title = element_text(hjust = 0.5),
      panel.grid = element_blank(),  # Removes all grid lines
      panel.spacing.x = unit(0.1, "lines"),  # - control width of each graph/column
      panel.spacing.y = unit(0.25, "lines"),   # - control vertical space
      strip.background = element_rect(fill = strip_fill_color, color = "black"),
      strip.placement = strip_placement,
      strip.text.x = element_text(
        vjust = 0.5,
        size = strip_text_size,
        margin = margin(t = 5, b = 5, r = 6, l = 6)   # - controls text in boxes
      ),
      strip.text.y.right = element_text(
        angle = 0,
        vjust = 0.5,
        margin = margin(t = 15, b = 15, r = 26, l = 26)
      ),
      axis.text.y = element_blank(),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank()
    )
}

# Function for the Age plot (g1)
plot_age <- function(data) {
  ggplot(data, aes(x = explanatory_value, y = mean, group = explanatory_value)) +
    geom_errorbar(aes(ymin = low, ymax = high), width = 0.2) +
    geom_point(size = set_dot_size, color = "black") +
    coord_flip() +
    #scale_x_continuous(limits = c(1, 5), breaks = 1:5) +
    facet_grid(
      rows = vars(explanatory),
      cols = vars(response),
      labeller = labeller(
        explanatory = as_labeller(explanatory_labels)
      )
    ) +
    theme_minimal(base_size = 12) +
    labs(
      x = NULL,
      y = NULL
    ) +
    theme(
      panel.spacing.x = unit(0.1, "lines"),  # - control width of each graph/column
      panel.spacing.y = unit(0.0, "lines"),   # - control vertical space
      panel.grid = element_blank(),  # Removes all grid lines
      strip.background = element_rect(fill = strip_fill_color, color = "black"),
      strip.placement = strip_placement,
      strip.text.x = element_blank(),
      strip.text.y.right = element_text(
        angle = 0,
        vjust = 0.5,
        margin = margin(t = 10, b = 10, r = 23, l = 23)
      ),
      axis.text.y = element_text(size = 10),
      panel.spacing = unit(1, "lines"),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank()
    )
}

# Function for the Gender plot (g2)
plot_gender <- function(data) {
  ggplot(data, aes(x = explanatory_value, y = mean, group = explanatory_value)) +
    geom_errorbar(aes(ymin = low, ymax = high), width = 0.2) +
    geom_point(size = set_dot_size, color = "black") +
    coord_flip() +
    #scale_x_continuous(limits = c(1, 5), breaks = 1:5) +
    facet_grid(
      rows = vars(explanatory),
      cols = vars(response),
      labeller = labeller(
        explanatory = as_labeller(explanatory_labels)
      )
    ) +
    theme_minimal(base_size = 12) +
    labs(
      x = NULL,
      y = NULL
    ) +
    theme(
      panel.spacing.x = unit(0.1, "lines"),  # - control width of each graph/column
      panel.grid = element_blank(),  # Removes all grid lines
      strip.background = element_rect(fill = strip_fill_color, color = "black"),
      strip.placement = strip_placement,
      strip.text.x = element_blank(),
      strip.text.y.right = element_text(
        angle = 0,
        vjust = 0.5,
        margin = margin(t = 10, b = 10, r = 15, l = 15)
      ),
      axis.text.y = element_text(size = 10),
      axis.text.x = element_blank(),
      panel.spacing = unit(1, "lines"),
      axis.ticks.x = element_blank()
    )
}

# Function for the Race plot (g3)
plot_race <- function(data) {
  ggplot(data, aes(x = explanatory_value, y = mean, group = explanatory_value)) +
    geom_errorbar(aes(ymin = low, ymax = high), width = 0.2) +
    geom_point(size = set_dot_size, color = "black") +
    coord_flip() +
    #scale_x_continuous(limits = c(1, 5), breaks = 1:5) +
    facet_grid(
      rows = vars(explanatory),
      cols = vars(response),
      labeller = labeller(
        explanatory = as_labeller(explanatory_labels)
      )
    ) +
    theme_minimal(base_size = 12) +
    labs(
      x = NULL,
      y = NULL
    ) +
    theme(
      panel.spacing.x = unit(0.1, "lines"),  # - control width of each graph/column
      panel.grid = element_blank(),  # Removes all grid lines
      strip.background = element_rect(fill = strip_fill_color, color = "black"),
      strip.placement = strip_placement,
      strip.text.x = element_blank(),
      strip.text.y.right = element_text(
        angle = 0,
        vjust = 0.5,
        margin = margin(t = 10, b = 10, r = 20, l = 20)
      ),
      axis.text.y = element_text(size = 10),
      panel.spacing = unit(1, "lines"),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank()
    )
}

# Function for the Ethnicity plot (g4)
plot_ethnicity <- function(data) {
  ggplot(data, aes(x = explanatory_value, y = mean, group = explanatory_value)) +
    geom_errorbar(aes(ymin = low, ymax = high), width = 0.2) +
    geom_point(size = set_dot_size, color = "black") +
    coord_flip() +
    #scale_x_continuous(limits = c(1, 5), breaks = 1:5) +
    facet_grid(
      rows = vars(explanatory),
      cols = vars(response),
      labeller = labeller(
        explanatory = as_labeller(explanatory_labels)
      )
    ) +
    theme_minimal(base_size = 10) +
    labs(
      x = NULL,
      y = NULL
    ) +
    theme(
      plot.caption = element_text(hjust = 0),  # 0 = left, 1 = right, 0.5 = center
      panel.spacing.x = unit(0.1, "lines"),  # - control width of each graph/column
      panel.grid = element_blank(),  # Removes all grid lines
      strip.background = element_rect(fill = strip_fill_color, color = "black"),
      strip.placement = strip_placement,
      strip.text.x = element_blank(),
      strip.text.y.right = element_text(
        angle = 0,
        vjust = 0.5,
        margin = margin(t = 10, b = 10, r = 16, l = 16)
      ),
      axis.text.y = element_text(size = 10),
      axis.text.x = element_blank(),    # - blank out the x-axis
      axis.ticks.x = element_blank(),
      panel.spacing = unit(1, "lines")
    )
}

# Function for the Profession plot (g5)
plot_profession <- function(data) {
  ggplot(data, aes(x = explanatory_value, y = mean, group = explanatory_value)) +
    geom_errorbar(aes(ymin = low, ymax = high), width = 0.2) +
    geom_point(size = set_dot_size, color = "black") +
    coord_flip() +
    #scale_x_continuous(limits = c(1, 5), breaks = 1:5) +
    facet_grid(
      rows = vars(explanatory),
      cols = vars(response),
      labeller = labeller(explanatory = as_labeller(explanatory_labels))
    ) +
    theme_minimal(base_size = 12) +
    labs(x = NULL, y = NULL) +
    theme(
      panel.spacing.x = unit(0.1, "lines"),
      panel.grid = element_blank(),
      strip.background = element_rect(fill = strip_fill_color, color = "black"),
      strip.placement = strip_placement,
      strip.text.x = element_blank(),
      strip.text.y.right = element_text(
        angle = 0,
        vjust = 0.5,
        margin = margin(t = 10, b = 10, r = 8, l = 8)  # Match others or adjust as needed
      ),
      axis.text.y = element_text(size = 10),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank(),
      panel.spacing = unit(1, "lines")
    )
}

# Function for the Covid_Vax plot (g6)
plot_covid_vax <- function(data) {
  ggplot(data, aes(x = explanatory_value, y = mean, group = explanatory_value)) +
    geom_errorbar(aes(ymin = low, ymax = high), width = 0.2) +
    geom_point(size = set_dot_size, color = "black") +
    coord_flip() +
    #scale_x_continuous(limits = c(1, 5), breaks = 1:5) +
    facet_grid(
      rows = vars(explanatory),
      cols = vars(response),
      labeller = labeller(explanatory = as_labeller(explanatory_labels))
    ) +
    theme_minimal(base_size = 12) +
    labs(x = NULL, y = NULL) +
    theme(
      panel.spacing.x = unit(0.1, "lines"),
      panel.grid = element_blank(),
      strip.background = element_rect(fill = strip_fill_color, color = "black"),
      strip.placement = strip_placement,
      strip.text.x = element_blank(),
      strip.text.y.right = element_text(
        angle = 0,
        vjust = 0.5,
        margin = margin(t = 10, b = 10, r = 6, l = 6)  # matching gender plot
      ),
      axis.text.y = element_text(size = 10),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank(),
      panel.spacing = unit(1, "lines")
    )
}

# Function for the Flu_Vax plot (g7)
plot_flu_vax <- function(data, sub_title_specific) {
  ggplot(data, aes(x = explanatory_value, y = mean, group = explanatory_value)) +
    geom_errorbar(aes(ymin = low, ymax = high), width = 0.2) +
    geom_point(size = set_dot_size, color = "black") +
    coord_flip() +
    scale_x_continuous(limits = c(1, 5), breaks = 1:5) +
    facet_grid(
      rows = vars(explanatory),
      cols = vars(response),
      labeller = labeller(explanatory = as_labeller(explanatory_labels))
    ) +
    theme_minimal(base_size = 12) +
    labs(
      x = NULL,
      y = paste0("Mean Likert score\n(", sub_title_specific, ")"),
      caption = "Citation: The data collected by Pavan Shah, Giorgio Caturegli,\n Galen Shi, and Joshua Materi at the Johns Hopkins School of Medicine.\n We thank Giorgio Caturegli for providing access to the dataset. This visualization\n is based on their survey results."
    ) +
    theme(
      plot.caption = element_text(hjust = 0,
                                  margin = margin(t = 10, l = 30, r = 0, b = 0),
                                  lineheight = 1.2),
      panel.spacing.x = unit(0.1, "lines"),
      panel.grid = element_blank(),
      strip.background = element_rect(fill = strip_fill_color, color = "black"),
      strip.placement = strip_placement,
      strip.text.x = element_blank(),
      strip.text.y.right = element_text(
        angle = 0,
        vjust = 0.5,
        margin = margin(t = 10, b = 10, r = 5, l = 5)  # you can adjust this if flu vax labels are longer
      ),
      axis.text.y = element_text(size = 10),
      axis.text.x =  element_text(size = 10),
      axis.ticks.x = element_line(),
      panel.spacing = unit(1, "lines")
    )
}
# ......................................
# ........... end graphs ...............
# ......................................
